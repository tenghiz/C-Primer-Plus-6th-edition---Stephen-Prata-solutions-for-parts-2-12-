================= main.cpp =======================

// 9.4 - 

#include <iostream>
#include "golf.h" 

int main()
{
	SALES::Sales s1, s2;
	const double arr_sells[] = { 4,7,2,8,1,9,2 };
	int n = sizeof(arr_sells) / sizeof(double);
	SALES::setSales(s1, arr_sells, n);
	SALES::setSales(s2);
	SALES::showSales(s1);
	SALES::showSales(s2);
	return 0;
}


================= *.cpp ======================

#include <iostream>
#include "golf.h"

namespace SALES
{
	extern const int QUARTERS;

	// copies the lesser of 4 or n items from the array ar
	// to the sales member of s and computes and stores the
	// average, maximum, and minimum values of the entered items;
	// remaining elements of sales, if any, set to 0
	void setSales(Sales & s, const double ar[], int n)
	{
		//copy content of ar to temporary array
		double *pt = new double[n];
		for (int i = 0; i < n; i++)
		{
			pt[i] = ar[i];
		}
		//sort temporary array in increasing order
		for (int i = 0; i < n; i++)
		{
			for (int j = 1; j < n; j++)
			{
				if (pt[j] < pt[j - 1])
				{
					double temp = pt[j];
					pt[j] = pt[j - 1];
					pt[j - 1] = temp;
				}
			}
		}
		// fill Sales array with first 4 smallest members
		double sum = 0;
		for (int i = 0; i < QUARTERS; i++)
		{
			s.sales[i] = pt[i];
			sum += pt[i];
		}
		s.average = sum / QUARTERS;
		s.min = s.sales[0];
		s.max = s.sales[QUARTERS - 1];
		delete[] pt;
	}

	// gathers sales for 4 quarters interactively, stores them
	// in the sales member of s and computes and stores the
	// average, maximum, and minimum values
	void setSales(Sales & s)
	{
		std::cout << "Please fill in quarters sells" << std::endl;
		double sum = 0;
		for (int i = 0; i < QUARTERS; i++)
		{
			std::cout << i + 1 << " quarter: ";
			std::cin >> s.sales[i];
			sum += s.sales[i];
		}
		s.average = sum / QUARTERS;
		s.min = s.sales[0];
		s.max = s.sales[QUARTERS - 1];
	}

	// display all information in structure s
	void showSales(const Sales & s)
	{
		std::cout << std::endl;
		std::cout << "Sales" << std::endl;
		for (int i = 0; i < QUARTERS; i++)
		{
			std::cout << i + 1 << " quarter: " << s.sales[i] << std::endl;
		}
		std::cout << std::endl;
		std::cout << "Average: " << s.average << std::endl;
		std::cout << "Max: " << s.max << std::endl;
		std::cout << "Min: " << s.min << std::endl;
		std::cout << std::endl;
	}
}

====================== *.h =====================

#pragma once

namespace SALES
{
	const int QUARTERS = 4;
	struct Sales
	{
		double sales[QUARTERS];
		double average;
		double max;
		double min;
	};
	// copies the lesser of 4 or n items from the array ar
	// to the sales member of s and computes and stores the
	// average, maximum, and minimum values of the entered items;
	// remaining elements of sales, if any, set to 0
	void setSales(Sales & s, const double ar[], int n);
	// gathers sales for 4 quarters interactively, stores them
	// in the sales member of s and computes and stores the
	// average, maximum, and minimum values
	void setSales(Sales & s);
	// display all information in structure s
	void showSales(const Sales & s);
}