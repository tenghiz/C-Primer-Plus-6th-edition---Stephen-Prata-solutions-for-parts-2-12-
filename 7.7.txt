// 7.7 - arrfun3.cpp -- array functions and const

#include <iostream>

const int Max = 5;

double * fill_array(double ar[], int limit)
{
	using namespace std;
	double *pt = ar;
	int i = 0;
	while(i<limit)
	{
		cout << "Enter value #" << (i+1) << ": ";
		cin >> *pt;
		if (!cin) // bad input
		{
			cin.clear();
			while (cin.get() != '\n')
				continue;
			cout << "Bad input; input process terminated.\n";
			break;
		}
		else if ((*pt) < 0) // signal to terminate
			break;
		i++;
		pt++;
	}
	return pt;
}

void show_array(const double * begin, const double * end)
{
	using namespace std;
	const double *pt;
	int i = 1;
	for (pt = begin; pt<end; pt++)
	{
		cout << "Property #" << (i) << ": $";
		cout << *pt << endl;
		i++;
	}
}

void revalue(double r, double * begin , double * end)
{
	double *pt;
	for (pt = begin; pt < end; pt++)
		*pt *= r;
}

int main()
{
	using namespace std;
	double properties[Max];
	double *pt = fill_array(properties, Max);
	show_array(properties, pt);
	if (*pt != 0) // don't use *pt > 0, otherwise IF is skipped
	{
		cout << "Enter revaluation factor: ";
		double factor;
		while (!(cin >> factor)) // bad input
		{
			cin.clear();
			while (cin.get() != '\n')
				continue;
			cout << "Bad input; Please enter a number: ";
		}
		revalue(factor, properties, pt);
		show_array(properties, pt);
	}
	cout << "Done.\n";
	cin.get();
	cin.get();
	return 0;
}
