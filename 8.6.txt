//8.6 - Template function that returns the biggest element in array

#include <iostream>
#include <cstring>

template <class T>

T maxn(T * x, int y)
{
	int i = 0;
	T max = x[0];
	for (i = 0; i < y; i++)
	{
		if (x[i] > max)
			max = x[i];
	}
	return max;
}

//This is not a specialization
char * maxn1(char ** a, int b)
{
	int i = 0;
	int z = 0;
	int max = strlen(a[0]);
	for (i = 0; i < b; i++)
	{
		if ((strlen(a[i]))>max)
		{
			max = strlen(a[i]);
			z = i;
		}	
	}
	return a[z];
}

int main()
{
	int a[] = { 1,2,3,4,5,6,7,8,4,3,5 };
	int p = sizeof(a) / sizeof(int);
	int r = maxn(a, p);
	std::cout << r << std::endl;
	char * z[] = { "mama", "papa", "mosike", "jojotte", "momottte" };
	int m = sizeof(z) / sizeof(char *);
	char * g = maxn1(z, m);
	std::cout << g << std::endl;
	return 0;
}